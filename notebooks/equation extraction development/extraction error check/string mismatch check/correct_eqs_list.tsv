model	correct_eqs
BIOMD0000000955	"odes = [
    sympy.Eq(S(t).diff(t), - S(t) * (alpha * I(t) + beta * D(t) + gamma * A(t) + delta * R(t))),
    sympy.Eq(I(t).diff(t), S(t) * (alpha * I(t) + beta * D(t) + gamma * A(t) + delta * R(t)) - (epsilon + zeta + lambda_) * I(t)),
    sympy.Eq(D(t).diff(t), epsilon * I(t) - (eta + rho) * D(t)),
    sympy.Eq(A(t).diff(t), zeta * I(t) - (theta + mu + kappa) * A(t)),
    sympy.Eq(R(t).diff(t), eta * D(t) + theta * A(t) - (nu + xi) * R(t)),
    sympy.Eq(T(t).diff(t), mu * A(t) + nu * R(t) - (sigma + tau) * T(t)),
    sympy.Eq(H(t).diff(t), lambda_ * I(t) + rho * D(t) + kappa * A(t) + xi * R(t) + sigma * T(t)),
    sympy.Eq(E(t).diff(t), tau * T(t))
]"
BIOMD0000000956	"odes = [
    sympy.Eq(S(t).diff(t), - beta * S(t) * I(t) / N),
    sympy.Eq(E(t).diff(t), beta * S(t) * I(t) / N - alpha * E(t)),
    sympy.Eq(I(t).diff(t), alpha * E(t) - gamma * I(t)),
    sympy.Eq(R(t).diff(t), gamma * I(t))
]"
BIOMD0000000957	"odes = [
    sympy.Eq(S(t).diff(t), - beta * S(t) * I(t)),
    sympy.Eq(E(t).diff(t), beta * S(t) * I(t) - epsilon * E(t)),
    sympy.Eq(I(t).diff(t), epsilon * E(t) - (rho + mu) * I(t)),
    sympy.Eq(R(t).diff(t), rho * I(t) - d * R(t))
]"
BIOMD0000000958	"odes = [
    sympy.Eq(S(t).diff(t), -beta * I(t) / N * S(t) - l * beta * H(t) / N * S(t) - beta_prime * P(t) / N * S(t)),
    sympy.Eq(E(t).diff(t), beta * I(t) / N * S(t) + l * beta * H(t) / N * S(t) + beta_prime * P(t)/N * S(t) - kappa * E(t)),
    sympy.Eq(I(t).diff(t), kappa * rho1 * E(t) - (gamma_alpha + gamma_i) * I(t) - delta_i * I(t)),
    sympy.Eq(P(t).diff(t), kappa * rho2 * E(t) - (gamma_alpha + gamma_i) * P(t) - delta_p * P(t)),
    sympy.Eq(A(t).diff(t), kappa * (1 - rho1 - rho2) * E(t)),
    sympy.Eq(H(t).diff(t), gamma_alpha * (I(t) + P(t)) - gamma_r * H(t) - delta_h * H(t)),
    sympy.Eq(R(t).diff(t), gamma_i * (I(t) + P(t)) + gamma_r * H(t)),
    sympy.Eq(F(t).diff(t), delta_i * I(t) + delta_p * P(t) + delta_h * H(t))
]"
BIOMD0000000960	"odes = [
    sympy.Eq(S(t).diff(t), - S(t) * beta * (I(t) + l_a * A(t) + l * H(t)) / N),
    sympy.Eq(E(t).diff(t), S(t) * beta * (I(t) + l_a * A(t) + l * H(t)) / N - kappa * E(t)),
    sympy.Eq(I(t).diff(t), kappa * rho * E(t) - (gamma_a + gamma_I + delta_I) * I(t)),
    sympy.Eq(A(t).diff(t), kappa * (1 - rho) * E(t) - mu * A(t)),
    sympy.Eq(H(t).diff(t), gamma_a * I(t) - (gamma_r + delta_H) * H(t)),
    sympy.Eq(R(t).diff(t), gamma_I * I(t) + gamma_r * H(t) + mu * (1 - delta_A) * A(t)),
    sympy.Eq(D(t).diff(t), delta_H * H(t) + delta_I * I(t) + mu * delta_A * A(t))
]"
BIOMD0000000962	"odes = [
    sympy.Eq(S(t).diff(t), -a * U(t) * S(t) / N),
    sympy.Eq(U(t).diff(t), a * U(t) * S(t) / N - gamma1 * U(t)),
    sympy.Eq(Q(t).diff(t), gamma1 * U(t) - (gamma2 + (1 - gamma2) * sigma) * Q(t)),
    sympy.Eq(C(t).diff(t), (gamma2 + (1 - gamma2) * sigma) * Q(t))
]"
2024_dec_epi_1_model_A	"odes = [
    sympy.Eq(s1(t).diff(t), pi_h * (1 - rho) - nu * lambda_h * s1(t) - mu_h * s1(t)),
    sympy.Eq(s_h(t).diff(t), mu_h * rho - lambda_h * s_h(t) - mu_h * s_h(t)),
    sympy.Eq(e_h(t).diff(t), (nu * s1(t) + s_h(t)) * lambda_h - (sigma + mu_h) * e_h(t)),
    sympy.Eq(p(t).diff(t), sigma * e_h(t) - (omega + mu_h) * p(t)),
    sympy.Eq(i1(t).diff(t), omega * p(t) - (theta + k1 + tau1 + mu_h) * i1(t)),
    sympy.Eq(i2(t).diff(t), theta * i1(t) - (k2 + delta_i + tau2 + mu_h) * i2(t)),
    sympy.Eq(h(t).diff(t), k1 * i1(t) + k2 * i2(t) - (mu_h + tau3 + delta_h) * h(t)),
    sympy.Eq(r_h(t).diff(t), tau1 * i1(t) + tau2 * i2(t) + tau3*h(t) - mu_h * r_h(t)),
    sympy.Eq(s_r(t).diff(t), pi_r - lambda_r * s_r(t) - mu_r * s_r(t)),
    sympy.Eq(e_r(t).diff(t), lambda_r * s_r(t) - (sigma_r + mu_r) * e_r(t)),
    sympy.Eq(i_r(t).diff(t), sigma_r * e_r(t) - (delta_r + mu_r + tau_r) * i_r(t)),
    sympy.Eq(r_r(t).diff(t), tau_r * i_r(t) - mu_r * r_r(t))
]"
2024_dec_epi_1_model_B	"odes = [
    sympy.Eq(sh(t).diff(t), beta_h - (beta_1 * ir(t) + beta_2 * ih(t)) * sh(t) / N_h - mu_h * sh(t) + phi * qh(t)),
    sympy.Eq(eh(t).diff(t), (beta_1 * ir(t) + beta_2 * ih(t)) * sh(t) / N_h - (alpha_1 + alpha_2 + mu_h) * eh(t)),
    sympy.Eq(ih(t).diff(t), alpha_1 * eh(t) - (mu_h + delta_h + gamma) * ih(t)),
    sympy.Eq(qh(t).diff(t), alpha_2 * eh(t) - (phi + tau + delta_h + mu_h) * qh(t)),
    sympy.Eq(rh(t).diff(t), gamma * qh(t) + tau*qh(t) - mu_h * rh(t)),
    
    sympy.Eq(sr(t).diff(t), beta_r - (beta_3 * sr(t) * ir(t) / N_r) - mu_r*sr(t)),
    
    sympy.Eq(er(t).diff(t), beta_3 * sr(t) * ir(t) / N_r - (mu_r + alpha_3) * er(t)),
    sympy.Eq(ir(t).diff(t), alpha_3 * er(t) - (mu_r + delta_r) * ir(t))
]"
2024_dec_epi_1_model_C	"odes = [
    sympy.Eq(s_m(t).diff(t), - lambda_m * s_m(t)),
    sympy.Eq(e_m(t).diff(t), lambda_m * s_m(t) - alpha_m * e_m(t)),
    sympy.Eq(i_m(t).diff(t), alpha_m * e_m(t) - tau_m * i_m(t)),
    sympy.Eq(r_m(t).diff(t), tau_m * i_m(t)),
    sympy.Eq(s_w(t).diff(t), - lambda_w * s_w(t)),
    sympy.Eq(e_w(t).diff(t), lambda_w * s_w(t) - alpha_w * e_w(t)),
    sympy.Eq(i_w(t).diff(t), alpha_w * e_w(t) - tau_w * i_w(t)),
    sympy.Eq(r_w(t).diff(t), tau_w * i_w(t))
]"
SAPHIRE	"odes = [
    sympy.Eq(S(t).diff(t), n - b * (alpha * P(t) + alpha * A(t) + l) / N * S(t) - n * S(t) / N),
    sympy.Eq(E(t).diff(t), b * (alpha * P(t) + alpha * A(t) + l) / N * S(t) - E(t) / De - n * E(t) / N),
    sympy.Eq(P(t).diff(t), E(t) / De - P(t) / Dp - n * P(t)/N),
    sympy.Eq(A(t).diff(t), (1 - r) * P(t) / Dp - A(t) / Di - n * A(t) / N),
    sympy.Eq(I(t).diff(t), r * P(t) / Dp - I(t) / Di - I(t) / Dq),
    sympy.Eq(H(t).diff(t), I(t) / Dq - H(t) / Dh),
    sympy.Eq(R(t).diff(t), A(t) + I(t) / Di - H(t) / Dh - n * R(t) / N)
]"