================================================================================
Model: BIOMD0000000955
================================================================================

odes = [sympy.Eq(S(t).diff(t), - S(t) * (alpha * I(t) + beta * D(t) + gamma * A(t) + delta * R(t))),sympy.Eq(I(t).diff(t),S(t) * (alpha * I(t) + beta * D(t) + gamma * A(t) + delta * R(t)) - (epsilon + zeta + lambda_) * I(t)),sympy.Eq(D(t).diff(t),epsilon * I(t) - (eta + rho) * D(t)),sympy.Eq(A(t).diff(t),zeta * I(t) - (theta + mu + kappa) * A(t)),sympy.Eq(R(t).diff(t),eta * D(t) + theta * A(t) - (nu + xi) * R(t)),sympy.Eq(T(t).diff(t),mu * A(t) + nu * R(t) - (sigma + tau) * T(t)),sympy.Eq(H(t).diff(t),lambda_ * I(t) + rho * D(t) + kappa * A(t) + xi * R(t) + sigma * T(t)),sympy.Eq(E(t).diff(t),tau * T(t))]
odes = [sympy.Eq(S(t).diff(t), - S(t) * (alpha * I(t) + beta * D(t) + gamma * A(t) + delta * R(t))),sympy.Eq(I(t).diff(t),S(t) * (alpha * I(t) + beta * D(t) + gamma * A(t) + delta * R(t)) - (epsilon + zeta + lambda_) * I(t)),sympy.Eq(D(t).diff(t),epsilon * I(t) - (eta + rho) * D(t)),sympy.Eq(A(t).diff(t),zeta * I(t) - (theta + mu + kappa) * A(t)),sympy.Eq(R(t).diff(t),eta * D(t) + theta * A(t) - (nu + xi) * R(t)),sympy.Eq(T(t).diff(t),mu * A(t) + nu * R(t) - (sigma + tau) * T(t)),sympy.Eq(H(t).diff(t),lambda_ * I(t) + rho * D(t) + kappa * A(t) + xi * R(t) + sigma * T(t)),sympy.Eq(E(t).diff(t),tau * T(t))]

correct

================================================================================
Model: BIOMD0000000956
================================================================================

odes = [sympy.Eq(S(t).diff(t), - beta * ____ _ S(t) * I(t) / N),sympy.Eq(E(t).diff(t),beta * ____ _ S(t) * I(t) / N - alpha _ * E(t)),sympy.Eq(I(t).diff(t),alpha _____________________________ * E(t) - gamma * I(t)),sympy.Eq(R(t).diff(t),gamma * I(t))]
odes = [sympy.Eq(S(t).diff(t), - beta * I(t) * S(t) _ ____ / N),sympy.Eq(E(t).diff(t),beta * I(t) * S(t) _ ____ / N - _____ a * _________________________________ E(t)),sympy.Eq(I(t).diff(t),a * E(t) - gamma * I(t)),sympy.Eq(R(t).diff(t),gamma * I(t))]

error: 'a' instead of 'alpha'

================================================================================
Model: BIOMD0000000957
================================================================================

odes = [sympy.Eq(S(t).diff(t), - beta * S(t) ____ * I(t)),sympy.Eq(E(t).diff(t),beta ________________________________ _ ____ * S(t) * I(t) - epsilon * E(t)),sympy.Eq(I(t).diff(t),epsilon * E(t) - (rho + mu) * I(t)),sympy.Eq(R(t).diff(t),rho * I(t) - d * R(t))]
odes = [sympy.Eq(S(t).diff(t), - beta * ____ I(t) * ________________________________ S(t)),sympy.Eq(E(t).diff(t),beta * I(t) * S(t) _ ____ - epsilon * E(t)),sympy.Eq(I(t).diff(t),epsilon * E(t) - (rho + mu) * I(t)),sympy.Eq(R(t).diff(t),rho * I(t) - d * R(t))]

correct

================================================================================
Model: BIOMD0000000958
================================================================================
odes = [sympy.Eq(S(t).diff(t), - beta * I(t) _ ____ / N * S(t) - l * beta * H(t) / N * S(t) - beta_prime * P(t) / N * S(t)),sympy.Eq(E(t).diff(t),beta * I(t) _ ____ / N * S(t) + l * beta * H(t) / N * S(t) + _ beta_prime * P(t) / N * S(t) - kappa _ * E(t)),sympy.Eq(I(t).diff(t),kappa __________________________________ * rho1 ____ * E(t) - (gamma_alpha + gamma_i) * I(t) - delta_i * I(t)),sympy.Eq(P(t).diff(t),kappa __________________________________ * rho2 ____ * E(t) - (gamma_alpha + gamma_i) * P(t) - delta_p * P(t)),sympy.Eq(A(t).diff(t),kappa _____________________________ * (1 - rho1 - rho2) * E(t)),sympy.Eq(H(t).diff(t),gamma_alpha * (I(t) + P(t)) - gamma_r * H(t) - delta_h * H(t)),sympy.Eq(R(t).diff(t),gamma_i * (I(t) + P(t)) + gamma_r * H(t)),sympy.Eq(F(t).diff(t),delta_i * I(t) + delta_p * P(t) + delta_h * H(t))]
odes = [sympy.Eq(S(t).diff(t), - beta * I(t) * S(t) / N _ ____ - l * beta * H(t) / N _ ____ - beta_prime * P(t) _ _ * S(t)),sympy.Eq(E(t).diff(t),beta * I(t) * S(t) / N _ ____ + l * beta * H(t) / N _ ____ _ - beta_prime * P(t) _ _ * S(t) - _____ k * _________________________________ E(t)),sympy.Eq(I(t).diff(t),kappa1 * ____ P(t) * E(t) - (gamma_alpha + gamma_i) * I(t) - delta_i * _________________________________ I(t)),sympy.Eq(P(t).diff(t),kappa2 * ____ P(t) * E(t) - (gamma_alpha + gamma_i) * P(t) - delta_p * _________________________________ P(t)),sympy.Eq(A(t).diff(t),k * (1 - rho1 - rho2) * E(t)),sympy.Eq(H(t).diff(t),gamma_alpha * (I(t) + P(t)) - gamma_r * H(t) - delta_h * H(t)),sympy.Eq(R(t).diff(t),gamma_i * (I(t) + P(t)) _ _______ * H(t)),sympy.Eq(F(t).diff(t),delta_i * I(t) + delta_p * P(t) + delta_h * H(t))]

errors: 
- missing /N terms in second system (S and E equations)
- wrong sign in E equation (+ vs -)
- different parameters (kappa vs k, kappa*rho1 vs kappa1*P(t), kappa*rho2 vs kappa2*P(t)
- R equation: addition vs multiplication (+ gamma_r*H(t) vs * H(t))

================================================================================
Model: BIOMD0000000960
================================================================================
odes = [sympy.Eq(S(t).diff(t), - S(t) * beta * (I(t) + l_a _______ * A(t) + l _______ * H(t)) / N),sympy.Eq(E(t).diff(t),S(t) * beta * (I(t) + l_a _______ * A(t) + l _______ * H(t)) / N - kappa * E(t)),sympy.Eq(I(t).diff(t),kappa * rho * E(t) - (gamma_a + gamma_I + delta_I) * I(t)),sympy.Eq(A(t).diff(t),kappa * (1 - rho) * E(t) - mu * A(t)),sympy.Eq(H(t).diff(t),gamma_a * I(t) - (gamma_r + delta_H) * H(t)),sympy.Eq(R(t).diff(t),gamma_I * I(t) + gamma_r * H(t) + mu * (1 - delta_A) * A(t)),sympy.Eq(D(t).diff(t),delta_H * H(t) + delta_I * I(t) + mu * delta_A * A(t))]
odes = [sympy.Eq(S(t).diff(t), - S(t) * beta * (I(t) + ___ delta_A * A(t) + _ delta_H * H(t)) / N),sympy.Eq(E(t).diff(t),S(t) * beta * (I(t) + ___ delta_A * A(t) + _ delta_H * H(t)) / N - kappa * E(t)),sympy.Eq(I(t).diff(t),kappa * rho * E(t) - (gamma_a + gamma_I + delta_I) * I(t)),sympy.Eq(A(t).diff(t),kappa * (1 - rho) * E(t) - mu * A(t)),sympy.Eq(H(t).diff(t),gamma_a * I(t) - (gamma_r + delta_H) * H(t)),sympy.Eq(R(t).diff(t),gamma_I * I(t) + gamma_r * H(t) + mu * (1 - delta_A) * A(t)),sympy.Eq(D(t).diff(t),delta_H * H(t) + delta_I * I(t) + mu * delta_A * A(t))]

error: different parameters used


================================================================================
Model: SAPHIRE
================================================================================
odes = [sympy.Eq(S(t).diff(t),n - b * (alpha * P(t) + alpha * A(t) + l) _ ____ / N * S(t) - n * S(t) / N),sympy.Eq(E(t).diff(t),b * (alpha * P(t) + alpha * A(t) + l) _ ____ / N * S(t) - E(t) / De ___ - n * E(t) / N),sympy.Eq(P(t).diff(t),E(t) / De ___ - P(t) / Dp ___ - n * P(t) / N),sympy.Eq(A(t).diff(t),(1 - r) * P(t) / Dp ___ - A(t) / Di ___ - n * A(t) / N),sympy.Eq(I(t).diff(t),r * P(t) / Dp ___ - I(t) / Di ___ - I(t) / Dq),sympy.Eq(H(t).diff(t),I(t) _______________________________ / Dq ___ - H(t) / Dh),sympy.Eq(R(t).diff(t),A(t) _______________________________ + I(t) / Di - H(t) / Dh ___ - n * R(t) / N)]
odes = [sympy.Eq(S(t).diff(t),n - b * (alpha * P(t) + alpha * A(t) + l) * S(t) / N _ ____ - n * S(t) / N),sympy.Eq(E(t).diff(t),b * (alpha * P(t) + alpha * A(t) + l) * S(t) / N _ ____ - E(t) / __ D_e - n * E(t) / N),sympy.Eq(P(t).diff(t),E(t) / __ D_e - P(t) / __ D_p - n * P(t) / N),sympy.Eq(A(t).diff(t),(1 - r) * P(t) / __ D_p - A(t) / __ D_i - n * A(t) / N),sympy.Eq(I(t).diff(t),r * P(t) / __ D_p - I(t) / __ D_i - I(t) / ______________________________ D_q),sympy.Eq(H(t).diff(t),I(t) / __ D_q - H(t) / ______________________________ D_h),sympy.Eq(R(t).diff(t),A(t) + I(t) / __ _ ____ _ __ D_i - n * R(t) / N)]

error: missing the - H(t)/D_h term

================================================================================
Model: BIOMD0000000963
================================================================================
odes = [sympy.Eq(S(t).diff(t), - beta * (S ____ * I ____ / (1 + alpha * R)),sympy.Eq(I(t).diff(t),beta _________________________________ * (S ____ * I ____ / (1 + alpha * R) _____ - gamma * I),sympy.Eq(R(t).diff(t),gamma _________________________________ * I),] ______
odes = [sympy.Eq(S(t).diff(t), - beta * __ S(t) * _ I(t) / (1 + alpha * ______________________________ R(t))),sympy.Eq(I(t).diff(t),beta * __ S(t) * _ I(t) / (1 + alpha * __ R(t)) - gamma * ______________________________ I(t)),sympy.Eq(R(t).diff(t),gamma * ____ I(t))]

correct

================================================================================
Model: BIOMD0000000964
================================================================================
odes = [sympy.Eq(S(t).diff(t),b - (beta_1 _____ * S ____ * P) ____ / (1 + alpha_1 ______ * P) _____ - (beta_2 _____ * S ____ * (I_A, ______ + ,I_S)) ______ / (1 + alpha_2 ______ * (I_A, ______ + ,I_S)) _______ + psi * E ____ - mu * S),sympy.Eq(E(t).diff(t),(beta_1 _________________________________ * S ____ * P) ____ / (1 + alpha_1 ______ * P) _____ + (beta_2 _____ * S ____ * (I_A, ______ + ,I_S)) ______ / (1 + alpha_2 ______ * (I_A, ______ + ,I_S)) _______ - psi * E ____ - mu * E ____ - omega * E),sympy.Eq(I_A(t).diff(t),(1 _______________________________ - delta) * omega * E ____ - (mu + sigma) * I_A _____ - gamma_A ______ * I_A),sympy.Eq(I_S(t).diff(t),delta ___________________________________ * omega * E ____ - (mu + sigma) * I_S _____ - gamma_S ______ * I_S),sympy.Eq(R(t).diff(t),gamma_S ___________________________________ * I_S ____ + gamma_A ______ * I_A _____ - mu * R),sympy.Eq(P(t).diff(t),eta_A _______________________________ * I_A _____ + eta_S ___ * I_S _____ - mu_p __ * P)] ______
odes = [sympy.Eq(S(t).diff(t),b - _______ beta1 * _ S(t) * __ P(t) / (1 + _______ alpha1 * __ P(t)) - _______ beta2 * _ S(t) * _____ (IA(t) + ______ IS(t)) / (1 + _______ alpha2 * _____ (IA(t) + ______ IS(t))) + psi * _ E(t) - mu * ________________________________ S(t)),sympy.Eq(E(t).diff(t),beta1 * _ S(t) * __ P(t) / (1 + _______ alpha1 * __ P(t)) + _______ beta2 * _ S(t) * _____ (IA(t) + ______ IS(t)) / (1 + _______ alpha2 * _____ (IA(t) + ______ IS(t))) - psi * _ E(t) - mu * _ E(t) - omega * _____________________________ E(t)),sympy.Eq(IA(t).diff(t),(1 - delta) * omega * _ E(t) - (mu + sigma) * ___ IA(t) - _______ gammaA * __________________________________ IA(t)),sympy.Eq(IS(t).diff(t),delta * omega * _ E(t) - (mu + sigma) * ___ IS(t) - _______ gammaA * __________________________________ IS(t)),sympy.Eq(R(t).diff(t),gammaA * ___ S(t) + _______ gammaA * ___ IA(t) - mu * ______________________________ R(t)),sympy.Eq(P(t).diff(t),eta * ___ IA(t) + _____ eta * ___ IS(t) - ____ mu * ___ P(t))]

error: time-dependency, parameters

================================================================================
Model: BIOMD0000000970
================================================================================
odes = [sympy.Eq(S(t).diff(t), - r_1 __ * beta_1 _____ * I ____ * S ____ / N - r_2 __ * beta_2 _____ * E ____ * S ____ / N),sympy.Eq(E(t).diff(t),r_1 ___________________________ * beta _____ * I ____ * S ____ / N - alpha * E ____ + r_2 __ * beta_2 _____ * E ____ * S ____ / N),sympy.Eq(I(t).diff(t),alpha * E ____ - gamma * I),sympy.Eq(R(t).diff(t),gamma _________________________________ * I)] ______
odes = [sympy.Eq(S(t).diff(t), - ___ r1 * ______ beta1 * _ S(t) * _ I(t) / N - ___ r2 * ______ beta2 * _ E(t) * _ S(t) / ____________________________ N),sympy.Eq(E(t).diff(t),r1 * ____ beta1 * _ S(t) * _ I(t) / N - alpha * _ E(t) + ___ r2 * ______ beta2 * _ E(t) * _ S(t) / N),sympy.Eq(I(t).diff(t),alpha * _ E(t) - gamma * ______________________________ I(t)),sympy.Eq(R(t).diff(t),gamma * ___ I(t))]

correct
